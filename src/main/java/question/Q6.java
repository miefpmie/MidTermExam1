package question;

/** Q6 现有一个弹力球, 球从n厘米的地方落下。每次触碰到地面后会向上弹起, 每次弹起的高度为原来的一半。
 * 当球的弹起高度<10厘米(正好等于10厘米需要计入)时,我们就认定这个球停下了。
 * 求这个弹力球一共经过的路程之和。
 * 注意：计算过程中向下取整。
 * 方法传入参数: 1个整数height，表示弹力球起始的高度。
 * 方法返回值: 一个整数类型，表示弹力球经过的路程。
 * 例子1: 传入参数height为200cm。 返回值574
 * (因为200(第一次下落) + 100(第一次弹起) + 100(第二次下落) +50(第二次弹起) +
 * 50 (第三次下落)+ 25 (第三次弹起) + 25 (第四次下落)+ 12 (第四次弹起, 向下取整为12)
 * + 12(第五次下落)。由于第五次弹起高度为6, 小于10，所以不再统计)
 * 例子2: 传入参数height为15cm。 返回值15(因为15(第一次下落) 由于第一次弹起高度为7, 小于10，所以不再统计)
 */

public class Q6 {
    public int ballDistance(int height) {
    //一个整数类型，表示弹力球经过的路程。
     int sum=0;
     int x=0;
     int y=0;
     int a=0;

     //得出 落下的距离 200 这个是第一个    回弹的是第2个数字100   100第三个数字等于回弹的时候
     // 50第四个数字等于回弹的一半 第五个50等于四个数字  第六个数字25是第五个数字的一半  第七个数字25等于第六个数字
     // 第八个12数等于第七个数字的一半   第9个数字等于第八个数字 12  第10个数字6 小于10 不统计了
     // 计算过程中向下取整。(int) Math.floor()
     //int x1 =height;   200// int x2 = height/2;  100// int x3 = x2;      100
     //int x4= x3/2;  50  200/4//int x5=x4; 50// int x6= x5/2; 25   200/ 8  4*2   2*2*2  2的次方
     //基数 等于height/2/2

       while(true){
           x=height*2^a;
           y=x;




       }
        





        return 0;
    }
}
